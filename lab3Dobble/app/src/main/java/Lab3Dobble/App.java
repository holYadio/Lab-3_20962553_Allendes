/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Lab3Dobble;
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
public class App {
    public String menu() {
        return "Escoja su opcion:\n" +
               "1. Crear un juego\n" +
               "2. Registrar jugador\n" +
               "3. Jugar\n" +
               "4. Visualizar estado completo del juego" +
               "5. Salir\n";
    }

    public static void main(String[] args){
        Scanner entrada = new Scanner(System.in);
        boolean continuacion = true;
        int numElementos;
        List<String> elementos = new ArrayList<>();
        while(continuacion){
            System.out.println("Ingrese una opcion:\n "
                + "1. Ingresar una lista de elementos\n "
                + "2. Ocupar una lista de numeros (ingresar el maximo num)\n "
                + "3. Ocupar lista de letras con 13 elementos (Maximo 4 elementos por carta)");
            //int numOpcion = entrada.nextInt();
            int numOpcion = 3;
            if (numOpcion == 1){
                System.out.println("Cual es la cantidad de elementos que desea ingresar: ");
                numElementos = entrada.nextInt();
                for(int i = 0; i < numElementos; i++){
                    System.out.println("Ingrese el elemente "+ (i+1) +':');
                    Scanner elemento = new Scanner(System.in);
                    String element = elemento.nextLine();
                    elementos.add(element);
                }
                continuacion = false;
            } else if(numOpcion == 2){
                System.out.println("Ingresar el maximo de la lista: ");
                numElementos = entrada.nextInt();
                for(int i = 1; i <= numElementos; i++){
                    String strI = i + "";
                    elementos.add(strI);
                }
                
                continuacion = false;    
            } else if(numOpcion == 3){
                numElementos = 13;
                elementos.add("a");
                elementos.add("b");
                elementos.add("c");
                elementos.add("d");
                elementos.add("e");
                elementos.add("f");
                elementos.add("g");
                elementos.add("h");
                elementos.add("i");
                elementos.add("j");
                elementos.add("k");
                elementos.add("l");
                elementos.add("m");
                continuacion = false; 
            } else{
                System.out.println("Ingrese una opcion valida");
            }
        }
        
        
        /*
        for(int i = 0; i < numElementos; i++){
            System.out.println("El elemento " + (i+1) + "es : " + elementos.get(i));
        }
        */
        System.out.println("Ingrese la cantidad de elementos por carta");
        
        int numElemento = entrada.nextInt();
        System.out.println("Ingrese la cantidad de cartas del mazo"
                + "(ingrese un numero menor a 0 si quiere el maximo de "
                + "cartas que se pueden crear)");
        int cantCartas = entrada.nextInt();
        Dobble dobble = new Dobble(numElemento, cantCartas, elementos);
        Card carta1 = dobble.nthCard(0);
        System.out.println(dobble.FindTotalCards(carta1));
        /*
        Player player1 = new Player("Pedro",1);
        System.out.println(player1.getId());
        Card carta1 = new Card(1, elementos);
        Scanner opcion = new Scanner(System.in);
        int eleccion = opcion.nextInt();
        System.out.println(new App().menu());
        System.out.println("La opcion fue: " + eleccion);
        */
    }
}
